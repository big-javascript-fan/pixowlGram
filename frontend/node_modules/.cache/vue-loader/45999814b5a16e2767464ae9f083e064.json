{"remainingRequest":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Work/Work/pixowlGram/frontend/src/components/NewPost.vue?vue&type=style&index=0&id=0de4e860&scoped=true&lang=css&","dependencies":[{"path":"/Volumes/Work/Work/pixowlGram/frontend/src/components/NewPost.vue","mtime":1554494680000},{"path":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Work/Work/pixowlGram/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.hidden {\n    display: none;\n}\n",{"version":3,"sources":["NewPost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA","file":"NewPost.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container>\n        <v-layout row wrap>\n            <v-flex lg4 xs4 sm4 md3 offset-xs1 offset-lg1>\n                <picture-input\n                    ref=\"pictureInput\"\n                    @change=\"onChanged\"\n                    @remove=\"onRemoved\"\n                    :width=\"500\"\n                    :removable=\"true\"\n                    removeButtonClass=\"ui red button hidden\"\n                    :height=\"500\"\n                    accept=\"image/jpeg, image/png, image/gif\"\n                    buttonClass=\"ui button primary hidden\"\n                    :customStrings=\"{\n                        upload: '<h1>Upload it!</h1>',\n                        drag: 'Drag and drop your image here'\n                        }\">\n                </picture-input>\n            </v-flex>\n            <v-flex lg4 xs10 sm10 md4 offset-xs1 offset-lg3 align-center justify-center fill-height>\n                <div>\n                    <textarea v-model=\"description\" rows=\"10\" cols=\"50\"></textarea>\n                </div>\n                <div>\n                    <button @click=\"attemptUpload\" v-bind:class=\"{disabled: !image}\">\n                        Upload\n                    </button>\n                </div>\n            </v-flex>\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PictureInput from 'vue-picture-input';\n\nfunction upload(url, file, description, name='avatar') {\n    if(typeof url !== 'string') {\n        throw new TypeError(`Expected a string, got ${typeof url}`);\n    }\n\n    const formData = new FormData();\n    formData.append(name, file);\n    formData.append('description', description);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    return axios.post(url, formData, config);\n}\n\nexport default {\n    name: 'NewPost',\n    data: {\n        image: '',\n        description: ''\n    },\n    components: {\n        PictureInput\n    },\n    methods: {\n        onChanged: function() {\n            console.log(\"New picture uploaded\");\n            console.log(this.description);\n            if(this.$refs.pictureInput.file) {\n                this.image = this.$refs.pictureInput.file;\n            } else {\n                console.log(\"Old browser, No suppport for Filereader API\");\n            }\n        },\n        onRemoved: function() {\n            this.image = '';\n        },\n        attemptUpload: function() {\n            if(this.image) {\n                upload('http://localhost:3000/uploads', this.image, this.description)\n                    .then(response => {\n                        if(response.data.success) {\n                            this.image = '';\n                            console.log(\"Image uploaded successfully\");\n                        }\n                    })\n                    .catch(err => {\n                        console.error(err);\n                    });\n            }\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n.hidden {\n    display: none;\n}\n</style>\n"]}]}